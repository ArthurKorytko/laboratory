import sqlite3


def create_database():
    conn = sqlite3.connect("library.db")
    cursor = conn.cursor()
    cursor.execute("""
        CREATE TABLE IF NOT EXISTS books (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            author TEXT NOT NULL,
            year INTEGER,
            genre TEXT
        )
    """)
    conn.commit()
    conn.close()


def add_book(title, author, year, genre):
    try:
        conn = sqlite3.connect("library.db")
        cursor = conn.cursor()
        cursor.execute("INSERT INTO books (title, author, year, genre) VALUES (?, ?, ?, ?)",
                       (title, author, year, genre))
        conn.commit()
        print(f"‚úÖ –ö–Ω–∏–≥–∞ '{title}' –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ –±–∏–±–ª–∏–æ—Ç–µ–∫—É!")
    except sqlite3.Error as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –∫–Ω–∏–≥–∏: {e}")
    finally:
        conn.close()


def show_all_books():
    try:
        conn = sqlite3.connect("library.db")
        cursor = conn.cursor()
        cursor.execute("SELECT * FROM books")
        books = cursor.fetchall()
        conn.close()

        if books:
            print("\nüìö –í—Å–µ –∫–Ω–∏–≥–∏ –≤ –±–∏–±–ª–∏–æ—Ç–µ–∫–µ:")
            for book in books:
                print(
                    f"{book[0]}. {book[1]} - {book[2]} ({book[3]}) [{book[4]}]")
        else:
            print("‚ö†Ô∏è –ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ –ø—É—Å—Ç–∞!")
    except sqlite3.Error as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∫–Ω–∏–≥: {e}")


def show_books_by_genre():
    genre = input("–í–≤–µ–¥–∏—Ç–µ –∂–∞–Ω—Ä –∫–Ω–∏–≥–∏: ").strip()
    try:
        conn = sqlite3.connect("library.db")
        cursor = conn.cursor()
        cursor.execute("SELECT * FROM books WHERE genre = ?", (genre,))
        books = cursor.fetchall()
        conn.close()

        if books:
            print(f"\nüìö –ö–Ω–∏–≥–∏ –≤ –∂–∞–Ω—Ä–µ '{genre}':")
            for book in books:
                print(f"{book[1]} - {book[2]} ({book[3]})")
        else:
            print(f"‚ö†Ô∏è –ù–µ—Ç –∫–Ω–∏–≥ –≤ –∂–∞–Ω—Ä–µ '{genre}'.")
    except sqlite3.Error as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –∫–Ω–∏–≥: {e}")


def update_book_year():
    title = input(
        "–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–Ω–∏–≥–∏ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –≥–æ–¥–∞ –∏–∑–¥–∞–Ω–∏—è: ").strip()
    new_year = input("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π –≥–æ–¥ –∏–∑–¥–∞–Ω–∏—è: ").strip()

    try:
        new_year = int(new_year)
        conn = sqlite3.connect("library.db")
        cursor = conn.cursor()
        cursor.execute(
            "UPDATE books SET year = ? WHERE title = ?", (new_year, title))
        conn.commit()

        if cursor.rowcount > 0:
            print(f"‚úÖ –ì–æ–¥ –∏–∑–¥–∞–Ω–∏—è –∫–Ω–∏–≥–∏ '{title}' –æ–±–Ω–æ–≤–ª–µ–Ω –¥–æ {new_year}!")
        else:
            print(f"‚ö†Ô∏è –ö–Ω–∏–≥–∞ '{title}' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ –±–∏–±–ª–∏–æ—Ç–µ–∫–µ.")
    except ValueError:
        print("‚ùå –û—à–∏–±–∫–∞: –≥–æ–¥ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —á–∏—Å–ª–æ–º!")
    except sqlite3.Error as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –∫–Ω–∏–≥–∏: {e}")
    finally:
        conn.close()


def delete_book():
    title = input("–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–Ω–∏–≥–∏, –∫–æ—Ç–æ—Ä—É—é —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å: ").strip()
    try:
        conn = sqlite3.connect("library.db")
        cursor = conn.cursor()
        cursor.execute("DELETE FROM books WHERE title = ?", (title,))
        conn.commit()

        if cursor.rowcount > 0:
            print(f"üóë –ö–Ω–∏–≥–∞ '{title}' —É–¥–∞–ª–µ–Ω–∞!")
        else:
            print(f"‚ö†Ô∏è –ö–Ω–∏–≥–∞ '{title}' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.")
    except sqlite3.Error as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∫–Ω–∏–≥–∏: {e}")
    finally:
        conn.close()


def menu():
    create_database()

    while True:
        print("\nüìñ –ú–µ–Ω—é –±–∏–±–ª–∏–æ—Ç–µ–∫–∏:")
        print("1. –î–æ–±–∞–≤–∏—Ç—å –∫–Ω–∏–≥—É")
        print("2. –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –∫–Ω–∏–≥–∏")
        print("3. –ù–∞–π—Ç–∏ –∫–Ω–∏–≥–∏ –ø–æ –∂–∞–Ω—Ä—É")
        print("4. –û–±–Ω–æ–≤–∏—Ç—å –≥–æ–¥ –∏–∑–¥–∞–Ω–∏—è –∫–Ω–∏–≥–∏")
        print("5. –£–¥–∞–ª–∏—Ç—å –∫–Ω–∏–≥—É")
        print("6. –í—ã–π—Ç–∏")

        choice = input("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ (1-6): ").strip()

        if choice == "1":
            title = input("–ù–∞–∑–≤–∞–Ω–∏–µ –∫–Ω–∏–≥–∏: ").strip()
            author = input("–ê–≤—Ç–æ—Ä: ").strip()
            year = input("–ì–æ–¥ –∏–∑–¥–∞–Ω–∏—è: ").strip()
            genre = input("–ñ–∞–Ω—Ä: ").strip()
            try:
                year = int(year)
                add_book(title, author, year, genre)
            except ValueError:
                print("‚ùå –û—à–∏–±–∫–∞: –≥–æ–¥ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —á–∏—Å–ª–æ–º!")
        elif choice == "2":
            show_all_books()
        elif choice == "3":
            show_books_by_genre()
        elif choice == "4":
            update_book_year()
        elif choice == "5":
            delete_book()
        elif choice == "6":
            print("üëã –í—ã—Ö–æ–¥ –∏–∑ –ø—Ä–æ–≥—Ä–∞–º–º—ã.")
            break
        else:
            print("‚ö†Ô∏è –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.")


if __name__ == "__main__":
    menu()
